<?php/*Plugin Name:    Cloud ManagerPlugin URI:		Description:    Gestione di un sistema cloudVersion:        1.0Author:         Manuel Dalla Valle - Riccardo MarognaAuthor URI:     License:       	Copyright 2013  Manuel Dalla Valle  (manuel.dallavalle0@gmail.com)    This program is free software; you can redistribute it and/or modify    it under the terms of the GNU General Public License, version 2, as     published by the Free Software Foundation.    This program is distributed in the hope that it will be useful,    but WITHOUT ANY WARRANTY; without even the implied warranty of    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the    GNU General Public License for more details.    You should have received a copy of the GNU General Public License    along with this program; if not, write to the Free Software    Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA*/register_activation_hook( __FILE__, 'cloud_attivazione' );add_action( 'wp_enqueue_scripts', 'cloud_registracss' );add_action('admin_menu','cloud_amministrazione');add_action('admin_init', 'cloud_admin_init');add_shortcode('cloud-mostra-invia', 'cloud_mostra_invia');add_shortcode('cloud-mostra-files','cloud_mostra_files');add_shortcode('cloud-mostra-commenti','cloud_mostra_commenti');add_shortcode('cloud-mostra-estensioni','cloud_mostra_estensioni');add_filter('parse_query', 'cloud_query_parser');add_filter('the_posts', 'cloud_inserisci_contenuto');add_action('template_redirect', 'cloud_verificaform');add_filter('wp_list_pages_excludes', 'esclusione_pagine');function esclusione_pagine($exclude_array){    $opzioni = get_option( 'cloud_impostazioni' );		if (!is_user_logged_in()) {		$exclude_array = $exclude_array + array( $opzioni['id_inserisci'] , $opzioni['id_commenti'] );	}else{		$exclude_array = $exclude_array + array( $opzioni['id_commenti'] );	}    return $exclude_array;}function cloud_attivazione() {	// Accesso db	global $wpdb;	// Crea tabella custom	cloud_crea_tabelle($wpdb->get_blog_prefix());	if( get_option( 'cloud_impostazioni' ) === false ) {		cloud_crea_pagine();	}}function cloud_crea_tabelle($prefix){	$tab_files =	'CREATE TABLE IF NOT EXISTS ' . $prefix . 'cloudfiles (		`id_file` bigint(20) NOT NULL AUTO_INCREMENT,		`id_utente` bigint(20) NOT NULL,		`titolo` text NOT NULL,		`descrizione` text,		`contenuto` longtext,		`dir_file` longtext,		`data` date DEFAULT NULL,		`permessi` int(1)  NOT NULL DEFAULT 0,		`approvato` int(1)  NOT NULL DEFAULT 0,		PRIMARY KEY (`id_file`),		KEY id_utente (id_utente)	);	';	$tab_commenti =	'CREATE TABLE IF NOT EXISTS ' . $prefix . 'cloudcommenti (		`id_commento` bigint(20) NOT NULL AUTO_INCREMENT,		`id_file` bigint(20) NOT NULL,		`id_utente` bigint(20) NOT NULL,		`commento` text NOT NULL,		`data` datetime DEFAULT NULL,		`approvato` int(1)  NOT NULL DEFAULT 1,		PRIMARY KEY (`id_commento`),		KEY id_file (id_file)	);	';	global $wpdb;	$wpdb->query($tab_files);	$wpdb->query($tab_commenti);}function cloud_crea_pagine(){	$_a = array();	$_a['post_title'] = "Descrizione progetto";	$_a['post_content'] = "Contenuto da modificare dall'amministratore.";	$_a['post_status'] = 'publish';	$_a['post_type'] = 'page';	$_a['comment_status'] = 'closed';	$_a['ping_status'] = 'closed';	$_a['post_category'] = array(1); // Senza categoria		$_k = array();	$_k['post_title'] = "Documenti condivisi";	$_k['post_content'] = "Contenuto.";	$_k['post_status'] = 'publish';	$_k['post_type'] = 'page';	$_k['comment_status'] = 'closed';	$_k['ping_status'] = 'closed';	$_k['post_category'] = array(1); // Senza categoria		$_p = array();	$_p['post_title'] = "Inserisci documento";	$_p['post_content'] = "Contenuto.";	$_p['post_status'] = 'publish';	$_p['post_type'] = 'page';	$_p['comment_status'] = 'closed';	$_p['ping_status'] = 'closed';	$_p['post_category'] = array(1); // Senza categoria		$_y = array();	$_y['post_title'] = "Dettaglio file";	$_y['post_content'] = "Contenuto.";	$_y['post_status'] = 'publish';	$_y['post_type'] = 'page';	$_y['comment_status'] = 'closed';	$_y['ping_status'] = 'closed';	$_y['post_category'] = array(1); // Senza categoria	// ID	$presentazione_id = wp_insert_post( $_a );	$visualizza_id = wp_insert_post( $_k );	$inserisci_id = wp_insert_post( $_p );	$commenti_id = wp_insert_post( $_y );		cloud_impostazioni_default($inserisci_id, $visualizza_id, $commenti_id, $presentazione_id);}function cloud_impostazioni_default($ins, $vis, $comm, $pres){	if( get_option( 'cloud_impostazioni' ) === false ) {		$opzione['estensioni'] = "doc|xls|ppt|pdf|txt|zip|jpg|xml";		$opzione['dimensione_max'] = "7168"; // 7 MB		$opzione['id_inserisci'] = $ins; // ID PAGINA INSERISCI		$opzione['id_visualizza'] = $vis; // ID PAGINA VISUALIZZA		$opzione['id_commenti'] = $comm; // ID PAGINA VISUALIZZA		$opzione['id_presentazione'] = $pres; // ID PAGINA DESCRIZIONE PROGETTO		add_option('cloud_impostazioni', $opzione);	}}function cloud_registracss(){	wp_register_style( 'cloud-style', plugins_url('immagini_files/stile.css', __FILE__) );	wp_enqueue_style( 'cloud-style' );}function cloud_amministrazione(){	global $wpdb;	$approvazione_files = "SELECT COUNT(id_file) FROM " . $wpdb->get_blog_prefix() . "cloudfiles" . " WHERE approvato='0'";	$approvazione_commenti = "SELECT COUNT(id_file) FROM " . $wpdb->get_blog_prefix() . "cloudcommenti" . " WHERE approvato='0'";		$avv_files = intval( $wpdb->get_var( $wpdb->prepare( $approvazione_files ) ) );	$avv_comm =  intval( $wpdb->get_var( $wpdb->prepare( $approvazione_commenti ) ) );		$avv_tot = $avv_files + $avv_comm;		if($avv_tot != 0){		$label_menu = "Impostazioni cloud <b><font color='red'>[ " . $avv_tot . " ]</font></b>";				if($avv_files != 0){			$label_files = "Files <b><font color='red'>[ " . $avv_files . " ]</font></b>";		}else{			$label_files = "Files";		}				if($avv_comm != 0){			$label_comm = "Commenti <b><font color='red'>[ " . $avv_comm . " ]</font></b>";		}else{							$label_comm = "Commenti";		}			}else{		$label_menu = "Impostazioni cloud";		$label_files = "Gestione files";		$label_comm = "Gestione commenti";	}			add_menu_page(		'',                     // No need to have this		$label_menu,            // Menu Label		'manage_options',		'cloud-impostazioni',   // (*) Shared slug		'cloud_impostazioni_generali',		plugins_url( 'immagini_files/icona_admin.png' , __FILE__ ),		81	);	add_submenu_page(		'cloud-impostazioni',   // (*) Shared slug		'Impostazioni',   // Subpage Title		'Impostazioni',             // Submenu Label		'manage_options',		'cloud-impostazioni',   // (*) Shared slug		'cloud_impostazioni_generali'	);		add_submenu_page(		'cloud-impostazioni',		'Visualizza tutti i files',		$label_files,		'manage_options',		'cloud-gestione-files',		'cloud_impostazioni_gestione_files'	);	add_submenu_page(		'cloud-impostazioni',		'Gestione commenti',		$label_comm,		'manage_options',		'cloud-gestione-commenti',		'cloud_impostazioni_gestione_commenti'	);	}function cloud_admin_init(){	add_action('admin_post_salva_impostazioni_cloud' , 'verifica_impostazioni_cloud');	add_action('admin_post_azione_file_cloud' , 'azioni_file_admin_cloud');	add_action('admin_post_azione_commento_cloud' , 'azioni_commenti_admin_cloud');}function cloud_impostazioni_gestione_commenti() {		global $wpdb;	$tab_utenti = $wpdb->get_blog_prefix() . "users";	$tab_files = $wpdb->get_blog_prefix() . "cloudfiles";	$tab_commenti =  $wpdb->get_blog_prefix() . "cloudcommenti";		// Query estrazione con JOIN con controllo login		if( isset( $_GET['visualizza'] ) ) {		$id_file = $_GET['visualizza'];				$query = "SELECT " . $tab_utenti . ".user_nicename," . $tab_files . ".titolo," . $tab_commenti . ".id_commento," . $tab_commenti . ".commento," . $tab_commenti . ".data,"  . $tab_commenti . ".approvato" .			" FROM " . $tab_utenti . ", " . $tab_files . ", " . $tab_commenti .			" WHERE " . $tab_utenti . ".ID = " . $tab_commenti . ".id_utente AND " . $tab_files . ".id_file ='{$id_file}' AND " . $tab_commenti . ".id_file ='{$id_file}' ORDER BY " . $tab_commenti . ".data";					$array_commenti = $wpdb->get_results( $wpdb->prepare( $query ), ARRAY_A );			 		$options = get_option( 'cloud_impostazioni' );		$pagina_file = site_url() . "?page_id=" . $options["id_commenti"] . "&file_id=" . $id_file;?>			<script type="text/javascript">					function elimina(id){					document.getElementById('azione').value = 0;					invia(id);				}								function approva(id){					document.getElementById('azione').value = 1;					invia(id);				}								function modifica(id){					document.getElementById('azione').value = 2;					invia(id);				}												function invia(id){					document.getElementById('id_oggetto').value = id;					document.forms["commento_form"].submit();				}			</script>			<div id="cloud-visualizza" class="wrap">				<h2>Impostazioni generali del sistema cloud</h2>				<h3>Gestione commenti<?php if ( !empty( $array_commenti ) ) echo ' sul file: <a href="' . $pagina_file . '" target="_blank">' . $array_commenti[0]["titolo"] . '</a>'; ?></h3>				<br />				<form id="commento_form" method="post" action="admin-post.php">					<?php wp_nonce_field( 'sicurezza_cloud' ); ?>					<input type="hidden" id="id_oggetto" name="id_oggetto" value="" />					<input type="hidden" id="azione" name="azione" value="" />					<input type="hidden" name="action" value="azione_commento_cloud" />				</form>				<table style="max-width: 1100px;" border="1px">				<?php if ( !empty( $array_commenti ) ) { ?>					<th style="text-align:center;">Utente</th>					<th style="text-align:center;">Commento</th>					<th style="text-align:center;">Data</th>					<th style="text-align:center;">Azioni</th><?php					foreach ( $array_commenti as $commento ) {											$approvare = ($commento["approvato"] == 0 ? TRUE : FALSE); // Controllo se il commento ? da approvare												if($approvare) { ?>							<tr style="background: #FFCCCC">					<?php		}else{ ?>							<tr style="background: #FFF">			<?php		} ?> 						<td style="width:20%;text-align:center;"><?php echo $commento['user_nicename']; ?></td>						<td style="width:55%;text-align:center;"><?php echo $commento['commento']; ?></td>												<td style="width:10%;text-align:center;"><?php echo formattaData($commento['data'], 1); ?></td>						<td style="width:15%;text-align:center;">							<a href="#" onclick="modifica('<?php echo $commento['id_commento']; ?>');"><img src="<?php echo plugins_url( 'immagini_files/modifica.png' , __FILE__ ); ?>" alt="Modifica" title="Modifica" / ></a>&nbsp;&nbsp;							<?php if($approvare){ ?>								<a href="#" onclick="approva('<?php echo $commento['id_commento']; ?>');"><img src="<?php echo plugins_url( 'immagini_files/approvafile.png' , __FILE__ ); ?>" alt="Approva" title="Approva" / ></a>&nbsp;&nbsp;							<?php } ?>							<a href="#" onclick="elimina('<?php echo $commento['id_commento']; ?>');"><img src="<?php echo plugins_url( 'immagini_files/eliminafile.png' , __FILE__ ); ?>" alt="Scarta" title="Scarta" / ></a>						</td>				   </tr>		 <?php       }		} else { ?>						<tr style="background: #FFF"><td colspan="4">Non sono presenti commenti su questo file</td></tr>	 <?php } ?>					 				</table>			</div><?php	} else if( isset( $_GET['modifica'] ) ) {		$id_commento = $_GET['modifica'];				global $wpdb;		$tab_utenti = $wpdb->get_blog_prefix() . "users";		$tab_commenti = $wpdb->get_blog_prefix() . "cloudcommenti";				$query = "SELECT " . $tab_utenti . ".user_nicename," . $tab_commenti . ".commento," . $tab_commenti . ".data"  .			" FROM " . $tab_utenti . ", " . $tab_commenti .			" WHERE " . $tab_utenti . ".ID = " . $tab_commenti . ".id_utente AND " . $tab_commenti . ".id_commento ='{$id_commento}'";		$array_commenti = $wpdb->get_results( $wpdb->prepare( $query ), ARRAY_A );?>			<script type="text/javascript">				function invia(){					if (document.getElementById('commento_text').value == ""){						alert("Non puoi inserire un commento nullo");					}else{						document.forms["modifica_form"].submit();					}				}			</script>			<div id="cloud-visualizza" class="wrap">				<?php if(!empty($array_commenti)){ ?>				<h2>Impostazioni generali del sistema cloud</h2>				<h3>Modifica commento dell'utente <?php echo '<font color="red">' . $array_commenti[0]["user_nicename"] . '</font>'; ?></h3>				<small>Postato il <?php echo formattaData($array_commenti[0]["data"], 1); ?></small><br />				<br />				<form id="modifica_form" method="post" action="admin-post.php">					<?php wp_nonce_field( 'sicurezza_cloud' ); ?>					<input type="hidden" id="id_oggetto" name="id_oggetto" value="<?php echo $id_commento; ?>" />					<input type="hidden" id="azione" name="azione" value="4" />					<textarea aria-required="true" rows="8" cols="45" id="commento_text" name="mod_contenuto"><?php echo $array_commenti[0]["commento"]; ?></textarea>					<input type="hidden" name="action" value="azione_commento_cloud" />					<p><input type="button" onclick="invia()" value="Conferma" class="button-primary"/></p>				</form>				<?php }else{ ?>				<p>Il commento selezionato non &egrave; stato trovato!</p>				<?php } ?>			</div><?php	} else {			$query = "SELECT " . $tab_utenti . ".user_nicename," . $tab_files . ".titolo," . $tab_commenti . ".id_commento," . $tab_commenti . ".id_file," . $tab_commenti . ".commento," . $tab_commenti . ".data"  . 			" FROM " . $tab_utenti . ", " . $tab_files . ", " . $tab_commenti .			" WHERE " . $tab_utenti . ".ID = " . $tab_commenti . ".id_utente AND " . $tab_commenti . ".id_file = " . $tab_files . ".id_file AND " . $tab_commenti . ".approvato = '0' ORDER BY " . $tab_commenti . ".data";		$array_commenti = $wpdb->get_results( $wpdb->prepare( $query ), ARRAY_A );	?>		<script type="text/javascript">				function elimina(id){				document.getElementById('azione').value = 0;				invia(id);			}						function approva(id){				document.getElementById('azione').value = 1;				invia(id);			}						function modifica(id){				document.getElementById('azione').value = 2;				invia(id);			}						// Riceve ID FILE e visualizza tutti i commenti del file			function visualizza_pagina(id){				document.getElementById('azione').value = 3;				invia(id);			}						function invia(id){				document.getElementById('id_oggetto').value = id;				document.forms["commento_form"].submit();			}		</script>		<div id="cloud-visualizza" class="wrap">			<h2>Impostazioni generali del sistema cloud</h2>			<h3>Gestione commenti</h3>			<?php if( isset( $_GET['approvato'] ) && $_GET['approvato'] == '1' ) { ?>			<div id='message' class='updated fade'>				<p>					<strong>Commento approvato con successo</strong>				</p>			</div>			<?php }else if( isset( $_GET['scartato'] ) && $_GET['scartato'] == '1' ) { ?>			<div id='message' class='error'>				<p>					<strong>Commento scartato con successo</strong>				</p>			</div>			<?php }else if( isset( $_GET['modificato'] ) && $_GET['modificato'] == '1' ) { ?>			<div id='message' class='updated fade'>				<p>					<strong>Commento modificato con successo</strong>				</p>			</div>			<?php } ?>			<br />							<form id="commento_form" method="post" action="admin-post.php">				<?php wp_nonce_field( 'sicurezza_cloud' ); ?>				<input type="hidden" id="id_oggetto" name="id_oggetto" value="" />				<input type="hidden" id="azione" name="azione" value="" />				<input type="hidden" name="action" value="azione_commento_cloud" />			</form>			<table style="max-width: 1100px;" border="1px">					 <?php   if ( !empty( $array_commenti ) ) { ?>				<th style="text-align:center;">Titolo file</th>				<th style="text-align:center;">Commento</th>				<th style="text-align:center;">Data</th>				<th style="text-align:center;">Utente</th>				<th style="text-align:center;">Azioni</th>		<?php				// Estrazione valori				foreach ( $array_commenti as $commento ) {									$options = get_option( 'cloud_impostazioni' );					$pagina_file = site_url() . "?page_id=" . $options["id_commenti"] . "&file_id=" . $commento["id_file"];		?>						<tr style="background: #FFF">						<td style="width:25%;text-align:center;"><?php echo $commento['titolo']; ?></td>						<td style="width:40%;text-align:center;"><?php echo $commento['commento']; ?></td>						<td style="width:10%;text-align:center;"><?php echo formattaData($commento['data'], 1); ?></td>						<td style="width:10%;text-align:center;"><?php echo $commento['user_nicename']; ?></td>						<td style="width:15%;text-align:center;">							<a href="#" onclick="visualizza_pagina('<?php echo $commento['id_file']; ?>');"><img src="<?php echo plugins_url( 'immagini_files/commenti.png' , __FILE__ ); ?>" alt="Visualizza tutti i commenti del file" title="Visualizza tutti i commenti del file" / ></a>&nbsp;&nbsp;							<a href="#" onclick="modifica('<?php echo $commento['id_commento']; ?>');"><img src="<?php echo plugins_url( 'immagini_files/modifica.png' , __FILE__ ); ?>" alt="Modifica" title="Modifica" / ></a>&nbsp;&nbsp;							<a href="#" onclick="approva('<?php echo $commento['id_commento']; ?>');"><img src="<?php echo plugins_url( 'immagini_files/approvafile.png' , __FILE__ ); ?>" alt="Approva" title="Approva" / ></a>&nbsp;&nbsp;							<a href="#" onclick="elimina('<?php echo $commento['id_commento']; ?>');"><img src="<?php echo plugins_url( 'immagini_files/eliminafile.png' , __FILE__ ); ?>" alt="Scarta" title="Scarta" / ></a>						</td>				   </tr>		 <?php       }			} else { ?>				<tr style="background: #FFF"><td colspan="5">Non sono presenti commenti da approvare</td></tr>		 <?php   } ?>					 		   </table>		   </div><?php 	}}function cloud_impostazioni_gestione_files() {		global $wpdb;	$tab_utenti = $wpdb->get_blog_prefix() . "users";	$tab_files =  $wpdb->get_blog_prefix() . "cloudfiles";		// Query estrazione con JOIN con controllo login		$ricerca = (isset($_GET['ricerca']) ? $_GET['ricerca'] : FALSE);		if($ricerca){		$query = "SELECT " . $tab_utenti . ".user_nicename," . $tab_files . ".id_file," . $tab_files . ".contenuto," . $tab_files . ".titolo," . $tab_files . ".descrizione," . $tab_files . ".data," . $tab_files . ".permessi," . $tab_files . ".approvato" . 			" FROM " . $tab_utenti . ", " . $tab_files .			" WHERE (" . $tab_files . ".titolo LIKE '%%{$ricerca}%%' OR " . $tab_files . ".descrizione LIKE '%%{$ricerca}%%') AND " . $tab_utenti . ".ID = " . $tab_files . ".id_utente ORDER BY " . $tab_files . ".approvato," . $tab_files . ".data";	}else{		$query = "SELECT " . $tab_utenti . ".user_nicename," . $tab_files . ".id_file," . $tab_files . ".contenuto," . $tab_files . ".titolo," . $tab_files . ".descrizione," . $tab_files . ".data," . $tab_files . ".permessi," . $tab_files . ".approvato" . 			" FROM " . $tab_utenti . ", " . $tab_files .			" WHERE " . $tab_utenti . ".ID = " . $tab_files . ".id_utente ORDER BY " . $tab_files . ".approvato," . $tab_files . ".data";	}	    $array_files = $wpdb->get_results( $wpdb->prepare( $query ), ARRAY_A );?><script type="text/javascript">		function elimina(id){			document.getElementById('azione').value = 0;			invia(id);		}				function approva(id){			document.getElementById('azione').value = 1;			invia(id);		}						// Riceve ID FILE e visualizza tutti i commenti del file		function visualizza_pagina(id){			document.getElementById('azione').value = 2;			invia(id);		}				function invia(id){			document.getElementById('id_file').value = id;			document.forms["file_form"].submit();		}				function ricercaFile(){			var chiavericerca = document.getElementById('chiave_ricerca').value;			if (chiavericerca == ""){				alert("Devi inserire una chiave di ricerca");			}else{				document.getElementById('txt_ricerca').value = chiavericerca;				document.getElementById('azione').value = 3;				document.forms["file_form"].submit();			}		}</script><div id="cloud-visualizza" class="wrap">	<h2>Impostazioni generali del sistema cloud</h2>	<h3>Gestione files</h3>	<?php if($ricerca){ ?>	<h4>Risultati per la chiave di ricerca: <font color='red'><?php echo $ricerca; ?></font></h4>	<?php } ?>	<?php if( isset( $_GET['approvato'] ) && $_GET['approvato'] == '1' ) { ?>	<div id='message' class='updated fade'>		<p>			<strong>File approvato con successo</strong>		</p>	</div>	<?php }else if( isset( $_GET['eliminato'] ) && $_GET['eliminato'] == '1' ) { ?>	<div id='message' class='error'>		<p>			<strong>File eliminato con successo</strong>		</p>	</div>	<?php } ?>	<form onsubmit="return false;" id="ricerca" method="post" action="">		<table>			<tr>				<td>Ricerca files:</td>				<td><input type="text" id="chiave_ricerca" name="chiave_ricerca" value="" /></td>				<td><input type="button" onclick="ricercaFile()" value="Invia" class="button-primary"/></td>			</tr>		</table>	</form>	<hr />	<br />	<form id="file_form" method="post" action="admin-post.php">		<?php wp_nonce_field( 'sicurezza_cloud' ); ?>		<input type="hidden" id="id_file" name="id_file" value="" />		<input type="hidden" id="txt_ricerca" name="txt_ricerca" value="" />		<input type="hidden" id="azione" name="azione" value="" />		<input type="hidden" name="action" value="azione_file_cloud" />	</form>					<table style="max-width: 1100px;" border="1px">	 <?php  if ( !empty( $array_files ) ) { ?>		<th style="text-align:center;">Tipo</th>		<th style="text-align:center;">Titolo</th>		<th style="text-align:center;">Descrizione</th>		<th style="text-align:center;">Data</th>		<th style="text-align:center;">Utente</th>		<th style="text-align:center;">Azioni</th><?php		// Estrazione valori        foreach ( $array_files as $curr_file ) {							$file_type_array = wp_check_filetype(basename($curr_file['contenuto']));			$estensione = strtolower($file_type_array['ext']);			$permessi = $curr_file["permessi"];						$approvare = ($curr_file["approvato"] == 0 ? TRUE : FALSE); // Controllo se il file ? da approvare						if($approvare) { ?>				<tr style="background: #F5F5DC">		<?php		}else{ ?>				<tr style="background: #FFF"><?php		} ?> 				<td style="width:10%;text-align:center;">					<img src="<?php echo get_img_estensione($estensione); ?>" />&nbsp;&nbsp;					<?php echo get_img_permesso($permessi); ?> 				</td>				<td style="width:15%;text-align:center;"><?php echo $curr_file['titolo']; ?></td>				<td style="width:40%;text-align:center;"><?php echo $curr_file['descrizione']; ?></td>				<td style="width:10%;text-align:center;"><?php echo formattaData($curr_file['data']); ?></td>				<td style="width:10%;text-align:center;"><?php echo $curr_file['user_nicename']; ?></td>				<td style="width:15%;text-align:center;">					<a target="_blank" href="<?php echo $curr_file['contenuto']; ?>"><img src="<?php echo plugins_url( 'immagini_files/scaricafile.png' , __FILE__ ); ?>" alt="Scarica" title="Scarica" / ></a>&nbsp;&nbsp;					<a href="#" onclick="visualizza_pagina('<?php echo $curr_file['id_file']; ?>');"><img src="<?php echo plugins_url( 'immagini_files/commenti.png' , __FILE__ ); ?>" alt="Visualizza tutti i commenti del file" title="Visualizza tutti i commenti del file" / ></a>&nbsp;&nbsp;				<?php if($approvare){ ?>					<a href="#" onclick="approva('<?php echo $curr_file['id_file']; ?>');"><img src="<?php echo plugins_url( 'immagini_files/approvafile.png' , __FILE__ ); ?>" alt="Approva" title="Approva" / ></a>&nbsp;&nbsp;				<?php } ?>					<a href="#" onclick="elimina('<?php echo $curr_file['id_file']; ?>');"><img src="<?php echo plugins_url( 'immagini_files/eliminafile.png' , __FILE__ ); ?>" alt="Elimina" title="Elimina" / ></a>				</td>           </tr> <?php       }    } else { ?>        <tr style="background: #FFF"><td colspan="6">Non sono presenti files <?php if($ricerca) echo "che contengono la chiave di ricerca fornita"; ?></td></tr> <?php   } ?>                </table>   </div>   <br />   <?php }function cloud_impostazioni_generali() {	// Retrieve plugin configuration options from database	$options = get_option( 'cloud_impostazioni' );?><div id="cloud-general" class="wrap">	<h2>Impostazioni generali del sistema cloud</h2>	<h3>Gestione Upload</h3>	<?php if( isset( $_GET['conferma'] ) && $_GET['conferma'] == '1' ) { ?>	<div id='message' class='updated fade'>		<p>			<strong>Impostazioni salvate con successo</strong>		</p>	</div>	<?php } ?>	<form method="post" action="admin-post.php">		<input type="hidden" name="action" value="salva_impostazioni_cloud" />		<!-- Adding security through hidden referrer field -->		<?php wp_nonce_field( 'sicurezza_cloud' ); ?>		<p>		Estensioni abilitate: <input type="text" name="estensioni" value="<?php echo esc_html( $options['estensioni'] );?>"/> (Separare con il simbolo '|')		</p>		<p>		Dimensione massima: <input type="text" name="dimensione" value="<?php echo esc_html( $options['dimensione_max'] );?>"/> (Espressa in Kbytes)		</p>		<input type="submit" value="Invia" class="button-primary"/>	</form></div><?php }function azioni_commenti_admin_cloud() {	// Controllo permessi utenti    if ( !current_user_can( 'manage_options' ) )        wp_die( 'Non hai i permessi per effettuare questa operazione' );	    // Controllo nonce_field    check_admin_referer( 'sicurezza_cloud' );	global $wpdb;	$id_oggetto = $_POST['id_oggetto']; // ID FILE/COMMENTO	$azione = $_POST['azione']; // 1 APPROVA , 0 ELIMINA		if($azione == 0){		$query = "DELETE FROM ". $wpdb->get_blog_prefix() . "cloudcommenti" . " WHERE id_commento={$id_oggetto}";		$wpdb->query( $wpdb->prepare( $query ) );		wp_redirect( add_query_arg( array( 'page' => 'cloud-gestione-commenti', 'scartato' => '1'), admin_url( 'admin.php' ) ) );		exit;	}else if($azione == 1){		$query = "UPDATE " . $wpdb->get_blog_prefix() . "cloudcommenti SET approvato='1' WHERE id_commento={$id_oggetto}";		$wpdb->query( $wpdb->prepare( $query ) );		wp_redirect( add_query_arg( array( 'page' => 'cloud-gestione-commenti', 'approvato' => '1'), admin_url( 'admin.php' ) ) );		exit;	}else if($azione == 2){		wp_redirect( add_query_arg( array( 'page' => 'cloud-gestione-commenti', 'modifica' => $id_oggetto), admin_url( 'admin.php' ) ) );		exit;	}else if($azione == 3){		wp_redirect( add_query_arg( array( 'page' => 'cloud-gestione-commenti', 'visualizza' => $id_oggetto), admin_url( 'admin.php' ) ) );		exit;	}else if($azione == 4){		$query = "UPDATE " . $wpdb->get_blog_prefix() . "cloudcommenti SET commento='{$_POST["mod_contenuto"]}' WHERE id_commento={$id_oggetto}";		$wpdb->query( $wpdb->prepare( $query ) );		wp_redirect( add_query_arg( array( 'page' => 'cloud-gestione-commenti', 'modificato' => '1'), admin_url( 'admin.php' ) ) );		exit;	}}function azioni_file_admin_cloud() {	// Controllo permessi utenti    if ( !current_user_can( 'manage_options' ) )        wp_die( 'Non hai i permessi per effettuare questa operazione' );	    // Controllo nonce_field    check_admin_referer( 'sicurezza_cloud' );	global $wpdb;	$id_file = $_POST['id_file'];	$azione =  $_POST['azione']; // 1 APPROVA , 0 ELIMINA		if($azione == 0){		$file_query = "SELECT dir_file FROM " . $wpdb->get_blog_prefix() . "cloudfiles" . " WHERE id_file={$id_file}";		$elimina_query = "DELETE FROM ". $wpdb->get_blog_prefix() . "cloudfiles" . " WHERE id_file={$id_file}";		$link_file = $wpdb->get_var( $wpdb->prepare( $file_query ) );		if ($link_file != "") {			unlink($link_file);			$wpdb->query( $wpdb->prepare( $elimina_query ) );			wp_redirect( add_query_arg( array( 'page' => 'cloud-gestione-files', 'eliminato' => '1'), admin_url( 'admin.php' ) ) );			exit;		}	}else if($azione == 1){		$query = "UPDATE " . $wpdb->get_blog_prefix() . "cloudfiles SET approvato='1' WHERE id_file={$id_file}";		$wpdb->query( $wpdb->prepare( $query ) );		wp_redirect( add_query_arg( array( 'page' => 'cloud-gestione-files', 'approvato' => '1'), admin_url( 'admin.php' ) ) );		exit;	}else if($azione == 2){		wp_redirect( add_query_arg( array( 'page' => 'cloud-gestione-commenti', 'visualizza' => $id_file), admin_url( 'admin.php' ) ) );		exit;	}else if($azione == 3){		wp_redirect( add_query_arg( array( 'page' => 'cloud-gestione-files', 'ricerca' => urlencode($_POST['txt_ricerca'])), admin_url( 'admin.php' ) ) );		exit;	}}function verifica_impostazioni_cloud(){	// Controllo permessi utenti    if ( !current_user_can( 'manage_options' ) )        wp_die( 'Non hai i permessi per effettuare questa operazione' );	    // Controllo nonce_field    check_admin_referer( 'sicurezza_cloud' );    // Impostazioni attuali    $opzioni = get_option( 'cloud_impostazioni' );			$opzioni['estensioni'] = sanitize_text_field( $_POST['estensioni'] );	$opzioni['dimensione_max'] = sanitize_text_field( $_POST['dimensione'] );    // Aggiorna opzioni    update_option( 'cloud_impostazioni', $opzioni );	// Redirect    wp_redirect( add_query_arg( array( 'page' => 'cloud-impostazioni', 'conferma' => '1'), admin_url( 'admin.php' ) ) );    exit;}/** INIZIO FRONT-END */function cloud_query_parser($q) {	$opzioni = get_option( 'cloud_impostazioni' );	$visualizza_id = $opzioni['id_visualizza']; // Pagina visualizza	$inserisci_id  = $opzioni['id_inserisci']; // Pagina Inserisci	$commenti_id = $opzioni['id_commenti']; // Pagina dettaglio file	$presentazione_id = $opzioni['id_presentazione']; // Pagina descrizione progetto		$qv = $q->query_vars;	// Controllo pagina	if (!$q->did_permalink AND (isset($q->query_vars['page_id'])) AND (intval($q->query_vars['page_id']) == $visualizza_id)) {		$q->set('cloud_pag_visualizza', TRUE);		return $q;	} else 	if (!$q->did_permalink AND (isset($q->query_vars['page_id'])) AND (intval($q->query_vars['page_id']) == $inserisci_id)) {		$q->set('cloud_pag_inserisci', TRUE);		return $q;	} else 	if (!$q->did_permalink AND (isset($q->query_vars['page_id'])) AND (intval($q->query_vars['page_id']) == $commenti_id)) {		$q->set('cloud_pag_commenti', TRUE);		return $q;	} else 	if (!$q->did_permalink AND (isset($q->query_vars['page_id'])) AND (intval($q->query_vars['page_id']) == $presentazione_id)) {		$q->set('cloud_pag_presentazione', TRUE);		return $q;	} else {		$q->set('cloud_pag_inserisci', FALSE);		$q->set('cloud_pag_visualizza', FALSE);		$q->set('cloud_pag_commenti', FALSE);		$q->set('cloud_pag_presentazione', FALSE);		return $q;	}}function cloud_inserisci_contenuto($posts) {	global $wp_query;	if ($wp_query->get('cloud_pag_visualizza')) {		$posts[0]->post_content = "[cloud-mostra-files]";	}else if ($wp_query->get('cloud_pag_inserisci')) {		$posts[0]->post_content = "[cloud-mostra-invia]";	}else if ($wp_query->get('cloud_pag_commenti')) {		$posts[0]->post_content = "[cloud-mostra-commenti]";	}else if ($wp_query->get('cloud_pag_presentazione')) {		$posts[0]->post_content .= "[cloud-mostra-estensioni]";	}	return $posts;}function cloud_mostra_estensioni($short = 0){	$options = get_option( 'cloud_impostazioni' );			$array_ext = explode("|", $options['estensioni']);	$output = '';	$output .= "<br />Il servizio del sito offre la possibilit&agrave; di mantenere sempre a portata di mano i file pi&ugrave; importanti, caricarli, scaricarli, gestirli o eliminarli in ogni momento, in ogni luogo e da qualsiasi piattaforma. Un servizio semplice ma <b>efficace</b> per non perdere i documenti personali. Dotato di un'interfaccia intuitiva con cui &egrave; possibile accedere ai propri file in modo <b>semplice</b> e <b>rapido</b>.<br /><br />";	$output .= "&Egrave; inoltre possibile rendere pubblici i file in modo che tutti i visitatori del sito possano scaricarli e pertanto creare un gruppo di lavoro tra pi&ugrave; utenti. &Egrave; anche possibile mantenere la <b>riservatezza</b> dei propri documenti caricati in piattaforma rendendoli invisibili agli altri utenti. <br />Per quanto concerne gli aspetti di sicurezza e protezione della piattaforma il plugin prevede:<ul><li>Prevenzione attacchi <b>SQL injection</b></li><li><b>Crittografizzazione MD5</b> di tutti i dati immagazzinati nel database</li><li>Controlli incrociati sui permessi degli utenti</li></ul>";	$output .= '<h2><u>Impostazioni correnti del sistema</u></h2>';	$output .= '<h4>Dimensione massima dei documenti</h4>' . $options['dimensione_max'] . ' KBytes';	$output .= '<h4>Estensioni attualmente supportate</h4>';	$output .= '<ul>';	foreach($array_ext as $estensione){		$output .= '<li><img src="' . get_img_estensione($estensione) . '" / >&nbsp;&nbsp;' . strtoupper($estensione) . '</li>';	} 	$output .= '</ul>';	$output .= '&Egrave; possibile aggiungere nuove estensioni nel seguente modo:';	$output .= '<ol>';	$output .= '<li>Aggiungere l&rsquo;estensione dal pannello admin di WP in Impostazioni Cloud</li>';	$output .= '<li>Caricare l&rsquo;immagine della nuova estensione nella directory <b>wp-content/plugins/cloud-manager/immagini_files/</b> , facendo attenzione a rinominarla con la struttura: <b>&lt;estensione&gt;.png</b></li>';	$output .= '</ol>';	$output .= '<p>Nel caso invece l&rsquo;immagine dell&rsquo;estensione non fosse presente, verr&agrave; mostrata la seguente icona &nbsp;&nbsp;<img src="' . get_img_estensione('sconosciuto'). '" / ></p>';	return $output;}function cloud_mostra_invia(){	if (!is_user_logged_in()) {		echo "Non hai i permessi per accedere a questa pagina!";	}else{?>	<form method="post" id="aggiungi_file" action="" enctype="multipart/form-data"> 	   <?php			wp_nonce_field('verifica_agg_wp', 'br_user_form');			if (isset($_GET['approvazione']) && $_GET['approvazione'] == 1) {		?>			<div class="cloud_confermato">				<strong>File inviato con successo.</strong>			</div>				<?php 			} else if (isset($_GET['approvazione']) && $_GET['approvazione'] == 0) {		?>			<div class="cloud_approvazione">				<strong>Grazie per aver inviato questo file, sar&agrave; approvato al pi&ugrave; breve.</strong>			</div>		<?php 			} else if (isset($_GET['errore'])) {		?>			<div class="cloud_errore">				<strong><?php echo $_GET['errore']; ?></strong>			</div>		<?php } ?>			<br />		<input type="hidden" name="invia_form" value="1" />		   <table>		   		<tr>					<td>Titolo: </td>					<td><input type="text" name="titolo_file" style="width:300px" /></td>					<td>Max 50 caratteri</td>				</tr>				<tr>					<td>Descrizione del file: </td>					<td><textarea name="descrizione_file" rows="1" cols="38"></textarea></td>					<td>HTML supportato</td>				</tr>						<tr>					<td>Seleziona il file</td>					<td colspan="2"><input name="selezione_file" type="file" size="35" /></td>				<tr>					<td><input type="radio" checked="true" name="permessi" value="0">Pubblico</td>					<td><input type="radio" name="permessi" value="1">Privato</td>					<td><input type="radio" name="permessi" value="2">Personale</td>				</tr>		</table>		<input type="submit" name="submit" value="Conferma" />	</form><?php	}}function cloud_verificaform($template){	if (!empty($_POST['invia_form'])) {		cloud_invia_form();	} else if(!empty($_POST['elimina_file'])) {				cloud_eliminazione();	} else if(!empty($_POST['commenta_file'])) {				cloud_invia_commento();	} else {		return $template;	}}function cloud_invia_form(){	// Verifica che i campi siano completi	if (wp_verify_nonce($_POST['br_user_form'], 'verifica_agg_wp') && !empty($_POST['titolo_file']) && !empty($_POST['descrizione_file']) && (array_key_exists('selezione_file', $_FILES) && !$_FILES['selezione_file']['error'])) {		// Retrieve plugin configuration options from database		$options = get_option( 'cloud_impostazioni' );				$id_utente = get_current_user_id();		$data = getOrario();		// Retrieve file type and store lower-case version		$file_type_array = wp_check_filetype(basename($_FILES['selezione_file']['name']));		$estensione = strtolower($file_type_array['ext']);				$estensioni_permesse = explode("|", $options['estensioni']);		$dimensione_permessa = $options['dimensione_max'];				$dimensione_file = $_FILES["selezione_file"]["size"] / 1024;				if(!in_array($estensione, $estensioni_permesse)){			$redirectaddress = (empty($_POST['_wp_http_referer']) ? site_url() : $_POST['_wp_http_referer']);			wp_redirect(add_query_arg('errore', urlencode('Formato del file non accettato'), $redirectaddress));			exit;		}else if ($dimensione_file >= $dimensione_permessa){			$redirectaddress = (empty($_POST['_wp_http_referer']) ? site_url() : $_POST['_wp_http_referer']);			wp_redirect(add_query_arg('errore', urlencode('Dimensione del file troppo elevata'), $redirectaddress));			exit;		} else {					// Send uploaded file data to upload directory			$upload_return = wp_upload_bits($_FILES['selezione_file']['name'], null, file_get_contents($_FILES['selezione_file']['tmp_name']));			// Replace backslashes with slashes			$upload_return['file'] = str_replace('\\', '/', $upload_return['file']);			// Set upload path data if successful.			if (isset($upload_return['error']) && $upload_return['error'] != 0) {				wp_die("Errore interno nella funzioen di ricezione del file");				exit;			} else {							$permessi = $_POST['permessi'];							$url_file = $upload_return['url'];				$directory_file = $upload_return['file'];				//$nome_file = basename(parse_url($url_file, PHP_URL_PATH));							$approvazione = ($permessi == 2 ? 1 : 0); // Controllo se il file ? personale, se lo ? restituisce 0 altrimenti 1											$array_dati = array(					'id_utente' => $id_utente,					'titolo' => $_POST['titolo_file'],					'descrizione' => $_POST['descrizione_file'],					'contenuto' => $url_file,					'dir_file' => $directory_file,					'data' => $data,					'permessi' => $permessi,					'approvato' => $approvazione				);								global $wpdb;				$wpdb->insert( $wpdb->get_blog_prefix().'cloudfiles', $array_dati);				// Redirect								$redirectaddress = (empty($_POST['_wp_http_referer']) ? site_url() : $_POST['_wp_http_referer']);				wp_redirect(add_query_arg('approvazione', $approvazione, $redirectaddress));				exit;			}		}	} else {		$redirectaddress = (empty($_POST['_wp_http_referer']) ? site_url() : $_POST['_wp_http_referer']);		wp_redirect(add_query_arg('errore', urlencode('Controlla i campi'), $redirectaddress));		exit;	}}function cloud_mostra_files() {		global $wpdb;	$tab_utenti = $wpdb->get_blog_prefix() . "users";	$tab_files =  $wpdb->get_blog_prefix() . "cloudfiles";		// Query estrazione con JOIN con controllo login		if (!is_user_logged_in()) {		$query = "SELECT " . $tab_utenti . ".ID," . $tab_utenti . ".user_nicename," . $tab_files . ".id_file," . $tab_files . ".contenuto," . $tab_files . ".titolo," . $tab_files . ".data," . $tab_files . ".permessi" .		" FROM " . $tab_utenti . ", " . $tab_files .		" WHERE " . $tab_utenti . ".ID = " . $tab_files . ".id_utente AND " . $tab_files . ".permessi = '0' AND " . $tab_files . ".approvato = '1'  ORDER BY " . $tab_files . ".data";	}else{		$query = "SELECT " . $tab_utenti . ".ID," . $tab_utenti . ".user_nicename," . $tab_files . ".id_file," . $tab_files . ".contenuto," . $tab_files . ".titolo," . $tab_files . ".data," . $tab_files . ".permessi" .		" FROM " . $tab_utenti . ", " . $tab_files .		" WHERE " . $tab_utenti . ".ID = " . $tab_files . ".id_utente  AND " . $tab_files . ".approvato = '1'  ORDER BY " . $tab_files . ".data";	}    $array_files = $wpdb->get_results( $wpdb->prepare( $query ), ARRAY_A );		 // Output    $output = '';    	if (isset($_GET['eliminato']) && $_GET['eliminato'] == 1) {				$output .= 	'<div style="border:solid 1px #990000; background:#FFCC99;color:#990000;padding:4px;text-align:center;">';		$output .= 	'<strong>File eliminato con successo</strong>';		$output .= 	'</div><br />';	}  	$output .= '<table border="1px">';	    if ( !empty( $array_files ) ) {		$output .= '<th style="text-align:center;">Tipo</th>';		$output .= '<th style="text-align:center;">Titolo</th>';		$output .= '<th style="text-align:center;">Data</th>';		$output .= '<th style="text-align:center;">Utente</th>';		$output .= '<th style="text-align:center;">Dettagli</th>';				// Estrazione valori        foreach ( $array_files as $curr_file ) {					if( $curr_file["ID"] != get_current_user_id() && $curr_file["permessi"] == 2) continue;					$file_type_array = wp_check_filetype(basename($curr_file['contenuto']));			$estensione = strtolower($file_type_array['ext']);			$permessi = $curr_file["permessi"];						// Evidenzio file utente			if( $curr_file["ID"] == get_current_user_id() ) {				$output .= '<tr style="background: #F5F5DC">';						}else{				$output .= '<tr style="background: #FFF">';			}						$output .= '<td style="text-align:center;"><a target="_blank" href="' . $curr_file["contenuto"] . '" title="Scarica il documento"><img src="' . get_img_estensione($estensione) . '" / ></a>';						// ICONA PERMESSI			$output .= '&nbsp;&nbsp;' . get_img_permesso($permessi) . '</td>';									$output .= '<td style="text-align:center;">' . $curr_file['titolo'] . '</td>';						$output .= '<td style="text-align:center;">' . formattaData($curr_file['data']) . '</td>';			$output .= '<td style="text-align:center;">' . $curr_file['user_nicename'] . '</td>';						// Redirect			$options = get_option( 'cloud_impostazioni' );			$pagina_files = site_url() . "?page_id=" . $options["id_commenti"] . "&file_id=" . $curr_file["id_file"];						$output .= '<td style="text-align:center;"><a href="' . $pagina_files . '"><img src="' . plugins_url( 'immagini_files/scaricafile.png' , __FILE__ ) . '" alt="Visita" title="Visita" / ></a></td>';            $output .= '</tr>';        }    } else {        // Non presenti        $output .= '<tr style="background: #FFF">';        $output .= '<td colspan="4">Non ci sono file caricati.</td></tr>';    }                $output .= '</table><br />';        // Return data    return $output;}function cloud_mostra_commenti(){		$id_file = $_GET['file_id'];	$output = (!$id_file ? "Non hai i permessi per accedere a questa pagina" : "");		if(!$id_file) return $output;		global $wpdb;		$tab_utenti = $wpdb->get_blog_prefix() . "users";	$tab_files =  $wpdb->get_blog_prefix() . "cloudfiles";	$tab_commenti = $wpdb->get_blog_prefix() . "cloudcommenti";		// Query estrazione con JOIN con controllo login		$query = "SELECT " . $tab_utenti . ".user_nicename," . $tab_files . ".id_utente," . $tab_files . ".contenuto," . $tab_files . ".dir_file," . $tab_files . ".titolo," . $tab_files . ".descrizione," . $tab_files . ".data," . $tab_files . ".permessi," . $tab_files . ".approvato" .		" FROM " . $tab_files . "," . $tab_utenti .		" WHERE " . $tab_files . ".id_file = '{$id_file}' AND " . $tab_utenti . ".ID = " . $tab_files . ".id_utente";    $array_file = $wpdb->get_results( $wpdb->prepare( $query ), ARRAY_A );		   	//print_r($array_file);	    if ( !empty( $array_file ) ) {			$proprietario = (get_current_user_id() == $array_file[0]["id_utente"] ? TRUE : FALSE);			if(((!is_user_logged_in()) && ($array_file[0]["permessi"] != 0)) || ((!$proprietario) && ($array_file[0]["permessi"] == 2))) {			$output .= '<p><b><font color="red">Non hai i permessi per accedere a questo file</font></b></p>';		}else{?>			<script type="text/javascript">				var link = "<?php echo $array_file[0]["contenuto"]; ?>";				function scarica(){					window.location.href = link;				}			</script><?php			$permessi = $array_file[0]['permessi'];			$file_type_array = wp_check_filetype(basename($array_file[0]['contenuto']));			$estensione = strtolower($file_type_array['ext']);						if (isset($_GET['approvazione']) && $_GET['approvazione'] == 1) {				$output .= '<div class="cloud_approvazione">';				$output .= '<strong>Grazie per aver inviato il tuo commento, sar&agrave; approvato al pi&ugrave; breve.</strong>';				$output .= '</div><br />';			} else if (isset($_GET['errore']) && $_GET['errore'] == 1) {				$output .= '<div class="cloud_errore">';				$output .= '<strong>Controlla i campi</strong>';				$output .= '</div><br />';			} 							$output .= '<b>Autore:</b> ' . $array_file[0]["user_nicename"] . '<br />';			$output .= '<b>Titolo del file:</b> ' . $array_file[0]["titolo"] . '<br />';			$output .= '<b>Dimensione del file:</b> ' . formatBytes(filesize($array_file[0]["dir_file"])) . '<br />';			$output .= '<b>Formato del file:</b> ' .  strtoupper($estensione) . ' - <img src="' . get_img_estensione($estensione) . '" /><br />';			$output .= '<b>Accessibilit&agrave;:</b> ' . get_txt_permesso($permessi) . ' - ' . get_img_permesso($permessi) . '<br />';			$output .= '<b>Descrizione del file:</b> <blockquote>' . $array_file[0]["descrizione"] . '</blockquote>';						if($proprietario){				$output .= '<input type="button" onclick="scarica()" name="btn_download" value="Download" style="float:left;border-style:solid;border-color:green;" />';								$output .= '<form method="post" action="" enctype="multipart/form-data">';				$output .= wp_nonce_field('verifica_agg_wp', 'br_user_form');				$output .= '<input type="hidden" name="elimina_file" value="1" />';				$output .= '<input type="hidden" value="' . $id_file . '" name="id_file" />'; 				$output .= '<input type="submit" name="btn_elimina" value="Elimina" style="float:right;border-style:solid;border-color:red;" />';				$output .= '</form>';			}else{				$output .= '<input type="button" onclick="scarica()" name="btn_download" value="Download" style="border-style:solid;border-color:green;" />';			}					$output .= '<br /><br /><hr/><hr/>';					$ncommenti = "SELECT COUNT(id_commento) FROM " . $wpdb->get_blog_prefix() . "cloudcommenti" . " WHERE approvato='1' AND " .  $tab_commenti . ".id_file = '{$id_file}'";			$cont_commenti = intval( $wpdb->get_var( $wpdb->prepare( $ncommenti ) ) );			if($cont_commenti != 0){				$output .= '<h2>Ci sono ' . $cont_commenti . ' commenti su questo file</h2>';				// OUTPUT COMMENTI			}							$query = "SELECT " . $tab_utenti . ".user_nicename," . $tab_commenti . ".id_utente," . $tab_commenti . ".commento," . $tab_commenti . ".data," . $tab_commenti . ".approvato" .			" FROM " . $tab_utenti . ", " . $tab_commenti .			" WHERE " . $tab_utenti . ".ID = " . $tab_commenti . ".id_utente AND " .  $tab_commenti . ".id_file = '{$id_file}' ORDER BY " . $tab_commenti . ".data";			$array_commenti = $wpdb->get_results( $wpdb->prepare( $query ), ARRAY_A );						if ( !empty( $array_commenti ) ) {				foreach ( $array_commenti as $commento ) {					if( $commento["id_utente"] != get_current_user_id() && $commento["approvato"] == 0) continue;										$output .= get_avatar($commento["id_utente"] , 32) . '<span class="cloud_commento_utente">' . $commento["user_nicename"] . '</span>';					if($commento["id_utente"] == $array_file[0]["id_utente"]) $output .= '<span class="cloud_commento_proprietario">Autore</span>';					if($commento["approvato"] == 0) $output .= '<span class="cloud_commento_attesa">Il tuo commento &egrave; in attesa di approvazione</span>';					$output .= '<br /><small>' . formattaData($commento["data"], 1) . '</small><br />';					$output .= '<blockquote>' . $commento["commento"] . '</blockquote><hr/>';				}			}						if(is_user_logged_in()){				$output .= '<h3>Lascia un Commento</h3>';				$output .= '<form method="post" action="" enctype="multipart/form-data">';				$output .= wp_nonce_field('agg_commento', 'form_commento');				$output .= '<input type="hidden" name="commenta_file" value="1" />';				$output .= '<input type="hidden" value="' . $id_file . '" name="id_file" />'; 				$output .= '<p><textarea aria-required="true" rows="8" cols="45" name="contenuto"></textarea></p>';				$output .= '<p>HTML supportato</p>';				$output .= '<p><input type="submit" value="Commenta il file" /></p>';				$output .= '</form>';			}				}		    } else {        // Non presenti        $output .= '<p><b><font color="red">Il file selezionato non &egrave; stato trovato.</font></b></p>';    }            		    // Return data    return $output;}function cloud_invia_commento(){	// Verifica che i campi siano completi	if (wp_verify_nonce($_POST['form_commento'], 'agg_commento') && !empty($_POST['contenuto'])) {			$id_utente = get_current_user_id();		$orario = getOrario(1);				$id_file = $_POST['id_file'];		$array_dati = array(			'id_file' => $id_file,			'id_utente' => $id_utente,			'commento' => $_POST['contenuto'],			'data' => $orario,			'approvato' => 0		);				global $wpdb;		$wpdb->insert( $wpdb->get_blog_prefix().'cloudcommenti', $array_dati);		// Redirect				$redirectaddress = (empty($_POST['_wp_http_referer']) ? site_url() : $_POST['_wp_http_referer']);		wp_redirect(add_query_arg('approvazione', 1, $redirectaddress));		exit;			} else {		$redirectaddress = (empty($_POST['_wp_http_referer']) ? site_url() : $_POST['_wp_http_referer']);		wp_redirect(add_query_arg('errore', 1, $redirectaddress));		exit;	}}function cloud_eliminazione() {	if (wp_verify_nonce($_POST['br_user_form'], 'verifica_agg_wp') && !empty($_POST['id_file'])){		global $wpdb;				$id_file = $_POST['id_file'];				$file_query = "SELECT id_utente,dir_file FROM " . $wpdb->get_blog_prefix() . "cloudfiles" . " WHERE id_file={$id_file}";		$elimina_query = "DELETE FROM ". $wpdb->get_blog_prefix() . "cloudfiles" . " WHERE id_file={$id_file}";				$array_ris = $wpdb->get_results( $wpdb->prepare( $file_query ), ARRAY_A );				$proprietario = $array_ris[0]["id_utente"];		$dir_file = $array_ris[0]["dir_file"];		if ($proprietario == get_current_user_id()){			if ($dir_file != "") {				unlink($dir_file);				$wpdb->query( $wpdb->prepare( $elimina_query ) );				// Redirect				$options = get_option( 'cloud_impostazioni' );				$pagina_files = site_url() . "?page_id=" . $options["id_visualizza"];				wp_redirect(add_query_arg('eliminato', 1, $pagina_files));				exit;			}		}else{			wp_die("Non hai i permessi necessari per effettuare quest'azione!");		}	}}function get_txt_permesso($perm){	switch ($perm){		case 0:			return 'PUBBLICO';			break;		case 1:			return 'PRIVATO';			break;		case 2:			return 'PERSONALE';			break;	}}function get_img_permesso($perm){	switch ($perm){		case 0:			return '<img src="' . plugins_url( 'immagini_files/pubblico.png' , __FILE__ ) . '" alt="Pubblico" title="Pubblico" / >';			break;		case 1:			return '<img src="' . plugins_url( 'immagini_files/privato.png' , __FILE__ ) . '" alt="Privato" title="Privato" / >';			break;		case 2:			return '<img src="' . plugins_url( 'immagini_files/personale.png' , __FILE__ ) . '" alt="Personale" title="Personale" / >';			break;	}}function get_img_estensione($ext){	$dir_immagini = plugin_dir_path(__FILE__) . "/immagini_files/";	$img_compl = $dir_immagini . $ext . ".png";		if (file_exists($img_compl)) {		return plugins_url( 'immagini_files/' . $ext . '.png' , __FILE__ );	}else{		return plugins_url( 'immagini_files/sconosciuto.png' , __FILE__ );	}}function getOrario($ora = 0){	date_default_timezone_set('Europe/Rome');	if($ora == 0){		return date('Y-m-d');	}else{		return date("Y-m-d H:i:s");	}}function formattaData($orig, $tipo = 0){	$data = new DateTime($orig);	if($tipo == 0){		return $data->format('d-m-Y');	}else{		return $data->format('d-m-Y H:i:s');	}}function formatBytes($size, $precision = 2) {    $base = log($size) / log(1024);    $suffixes = array(' bytes', ' kbytes', ' Mbytes', ' Gbytes', ' Tbytes');       return round(pow(1024, $base - floor($base)), $precision) . $suffixes[floor($base)];}?>